bla bla t tao duoc git r ne. ahihi
HMAC-SHA-256 Key registered
Save these values right now. They won't be shown ever again!

API Key: vhu7yYHsTm7qmhD63BYD0yJ0xlMundUKYcyITMauDDFJ5qAdvESBwa5aHuRs9i7J
https://github.com/cromewar/Binance-trading-bot/blob/master/strategy.py
Secret Key: PNee3wJpac7aL0m2X8ei4X9j5LOzsQPEI7QcohsKi7iNmOPVCBPmfR52EXPQKl8G
https://binance-docs.github.io/apidocs/futures/en/#filters
https://python-binance.readthedocs.io/en/latest/
https://dev.binance.vision/c/api-en/futures-api-en/14
    https://dev.binance.vision/t/creating-a-limit-order-with-a-higher-price-than-the-mark-price/16483
        https://dev.binance.vision/t/how-can-i-attach-tp-sl-to-binance-futuressell-buy/14979/3
            https://dev.binance.vision/t/max-quantity-calculation/10415/13
https://pypi.org/project/talipp/
https://www.binance.com/en/support/faq/what-is-a-trailing-stop-order-360042299292
https://www.binance.com/en/support/faq/how-to-use-binance-futures-calculator-360036498511
https://infinityalgoacademy.com/machine-learning-lorentzian-classification/
https://script.google.com/d/1DZGQI3tHoBILaHuIfrmaA8LEYhFGgIs7sqIWSU1joe9z-WKJH-5Wk3tp/edit?usp=sharing
https://www.binance.com/en/futures/STMXUSDT/calculator
https://www.tradingcode.net/tradingview/manual-strategy-settings/
https://courses.theartoftrading.com/pages/macd-strategy-2-profit-targets-in-pine-script
https://zenandtheartoftrading.com/indicators/volume/
https://courses.theartoftrading.com/pages/a-simple-pullback-strategy-in-pine-script
https://www.tradingcode.net/tradingview/limit-order-entry/
https://www.tradingview.com/chart/JnkjUHR6/?symbol=BINANCE%3A1INCHUSDT.P
//
// @author LazyBear 
// List of all my indicators: https://www.tradingview.com/v/4IneGo8h/
//
study(shorttitle = "SQZMOM_LB", title="Squeeze Momentum Indicator [LazyBear]", overlay=false)

length = input(20, title="BB Length")
mult = input(2.0,title="BB MultFactor")
lengthKC=input(20, title="KC Length")
multKC = input(1.5, title="KC MultFactor")

useTrueRange = input(true, title="Use TrueRange (KC)", type=bool)

// Calculate BB
source = close
basis = sma(source, length)
dev = multKC * stdev(source, length)
upperBB = basis + dev
lowerBB = basis - dev

// Calculate KC
ma = sma(source, lengthKC)
range = useTrueRange ? tr : (high - low)
rangema = sma(range, lengthKC)
upperKC = ma + rangema * multKC
lowerKC = ma - rangema * multKC

sqzOn  = (lowerBB > lowerKC) and (upperBB < upperKC)
sqzOff = (lowerBB < lowerKC) and (upperBB > upperKC)
noSqz  = (sqzOn == false) and (sqzOff == false)

val = linreg(source  -  avg(avg(highest(high, lengthKC), lowest(low, lengthKC)),sma(close,lengthKC)), 
            lengthKC,0)

bcolor = iff( val > 0, 
            iff( val > nz(val[1]), lime, green),
            iff( val < nz(val[1]), red, maroon))
scolor = noSqz ? blue : sqzOn ? black : gray 
plot(val, color=bcolor, style=histogram, linewidth=4)
plot(0, color=scolor, style=cross, linewidth=2)

